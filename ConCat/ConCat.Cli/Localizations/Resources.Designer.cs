//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConCat.Cli.Localizations {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ConCat.Cli.Localizations.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The contents of file {x} was successfully copied to file {y}..
        /// </summary>
        internal static string Command_Copy_Success {
            get {
                return ResourceManager.GetString("Command.Copy.Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please enter the strings you want this file to contain!.
        /// </summary>
        internal static string Command_NewFile_Prompt {
            get {
                return ResourceManager.GetString("Command.NewFile.Prompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file {x} was successfully saved..
        /// </summary>
        internal static string Command_NewFile_Success {
            get {
                return ResourceManager.GetString("Command.NewFile.Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file {x} was sucessfully updated..
        /// </summary>
        internal static string Command_UpdateFile_Success {
            get {
                return ResourceManager.GetString("Command.UpdateFile.Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The program was unable to find the specified file. If the file exists, consider checking your input for typos or mistakes..
        /// </summary>
        internal static string Exception_FileNotFound {
            get {
                return ResourceManager.GetString("Exception.FileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your Operating System DENIED access to the file {x}. You may need to re-run the program with Administrator privileges to perform this operation..
        /// </summary>
        internal static string Exception_Permissions_Invalid {
            get {
                return ResourceManager.GetString("Exception.Permissions.Invalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can file a Bug Report at {x}.
        /// </summary>
        internal static string Exceptions_BugReport_File {
            get {
                return ResourceManager.GetString("Exceptions.BugReport.File", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If this was unintended or unexpected, it would really help us out if you could file a Bug Report..
        /// </summary>
        internal static string Exceptions_BugReport_Request {
            get {
                return ResourceManager.GetString("Exceptions.BugReport.Request", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You cannot copy more than one existing file into a file. Please use a file appending parameter instead..
        /// </summary>
        internal static string Exceptions_Copying_InvalidExistingArgs {
            get {
                return ResourceManager.GetString("Exceptions.Copying.InvalidExistingArgs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There was an exception. Here are the details: {x}.
        /// </summary>
        internal static string Exceptions_Generic {
            get {
                return ResourceManager.GetString("Exceptions.Generic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No File was provided as an argument to be concatenated or manipulated..
        /// </summary>
        internal static string Exceptions_NoFileProvided {
            get {
                return ResourceManager.GetString("Exceptions.NoFileProvided", resourceCulture);
            }
        }
    }
}
