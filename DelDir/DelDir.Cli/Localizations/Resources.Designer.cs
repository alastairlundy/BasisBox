//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DelDir.Cli.Localizations {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DelDir.Cli.Localizations.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The directory {x} could not be located. If the directory exists please check if it has a correcy or valid path to it..
        /// </summary>
        internal static string Exception_DirectoryNotFound {
            get {
                return ResourceManager.GetString("Exception.DirectoryNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The directory argument passed is not allowed in this program for the safety of your system..
        /// </summary>
        internal static string Exception_InvalidSlashArgument {
            get {
                return ResourceManager.GetString("Exception.InvalidSlashArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No arguments for the directory to be deleted were passed..
        /// </summary>
        internal static string Exception_NoArgumentsProvided {
            get {
                return ResourceManager.GetString("Exception.NoArgumentsProvided", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A non-empty directory of {x} was provided. If this was intentional please use the del command or an equivalent to delete a directory with files or folders in it. If this was not intentional please view the contents of the directory and ensure it is empty before deletion. If the directory was empty please file a bug report for this program at https://github.com/alastairlundy/BasisBox/issues/.
        /// </summary>
        internal static string Exception_NonEmptyDirectory {
            get {
                return ResourceManager.GetString("Exception.NonEmptyDirectory", resourceCulture);
            }
        }
    }
}
